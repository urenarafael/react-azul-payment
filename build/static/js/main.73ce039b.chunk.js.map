{"version":3,"sources":["core/Azul.js","core/Loader.js","core/NotFound.js","core/InvalidPayment.js","App.js","reportWebVitals.js","index.js"],"names":["authKey","info","MerchantId","MerchantName","MerchantType","CurrencyCode","OrderNumber","Amount","ITBIS","ApprovedUrl","CancelUrl","DeclinedUrl","UseCustomField1","CustomField1Label","CustomField1Value","UseCustomField2","CustomField2Label","CustomField2Value","parseAmount","amount","dollarsToCents","SuspenseLoader","style","position","top","left","width","height","zIndex","backgroundColor","display","alignItems","flexDirection","justifyContent","marginTop","marginBottom","CircularProgress","size","color","margin","padding","NotFound","class","configs","Application","storageId","useParams","url","useState","data","setData","auth","setAuth","loaded","setLoaded","error","setError","useEffect","fields","fi","String","shaObj","jsSHA","hmacKey","value","format","update","getHash","hashing","fetchStorage","React","useCallback","fetch","mode","then","res","json","result","orderId","hasError","message","id","setTimeout","document","getElementById","click","InvalidPayment","className","src","alt","action","method","type","name","visibility","DefaultCmp","SuccessTmp","params","queryString","parse","window","location","search","console","log","ResponseMessage","uri","stored","vendorId","userId","paymentMethod","typeOfReservation","reservationId","paymentMethodResponse","myHeaders","Headers","append","requestOptions","headers","body","JSON","stringify","redirect","response","text","href","catch","savePayment","Success","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.73ce039b.chunk.js","sourcesContent":["import jsSHA from 'jssha'\nimport dollarsToCents from 'dollars-to-cents'\nconst authKey =\n  'asdhakjshdkjasdasmndajksdkjaskldga8odya9d8yoasyd98asdyaisdhoaisyd0a8sydoashd8oasydoiahdpiashd09ayusidhaos8dy0a8dya08syd0a8ssdsax'\n\nconst info = {\n  MerchantId: '39038540035',\n  MerchantName: 'Nateevos',\n  MerchantType: 'Travel',\n  CurrencyCode: '$',\n  OrderNumber: '111111',\n  Amount: '1000', //no commas or dots, the last two digits are decilmals, ex: 1000 = 10.00\n  ITBIS: '000',\n  ApprovedUrl: '',\n  CancelUrl: '',\n  DeclinedUrl: '',\n  // ApprovedUrl: 'https://payments.nateevos.com/success?Approved',\n  // CancelUrl: 'https://payments.nateevos.com/cancel?Cancelled',\n  // DeclinedUrl: 'https://nateevos.com/declined/',\n  UseCustomField1: '0',\n  CustomField1Label: '',\n  CustomField1Value: '',\n  UseCustomField2: '0',\n  CustomField2Label: '',\n  CustomField2Value: ''\n}\n\nconst parseAmount = amount => {\n  return dollarsToCents(amount)\n}\nconst hashing = fields => {\n  let fi =\n    String(fields.MerchantId) +\n    String(fields.MerchantName) +\n    String(fields.MerchantType) +\n    String(fields.CurrencyCode) +\n    String(fields.OrderNumber) +\n    String(fields.Amount) +\n    String(fields.ITBIS) +\n    String(fields.ApprovedUrl) +\n    String(fields.DeclinedUrl) +\n    String(fields.CancelUrl) +\n    String(fields.UseCustomField1) +\n    String(fields.CustomField1Label) +\n    String(fields.CustomField1Value) +\n    String(fields.UseCustomField2) +\n    String(fields.CustomField2Label) +\n    String(fields.CustomField2Value) +\n    String(authKey)\n\n  const shaObj = new jsSHA('SHA-512', 'TEXT', {\n    hmacKey: { value: authKey, format: 'TEXT' }\n  })\n  shaObj.update(fi)\n  const hmac = shaObj.getHash('HEX')\n\n  return hmac\n}\n\nexport { info, hashing, parseAmount }\n","import React from 'react'\nimport { CircularProgress } from '@material-ui/core'\n\nconst SuspenseLoader = () => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        zIndex: 10000,\n        backgroundColor: '#FFF',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n      }}\n    >\n      <CircularProgress\n        size='6rem'\n        style={{\n          color: '#e8eaef',\n          margin: 0,\n          padding: 0\n        }}\n      />\n    </div>\n  )\n}\nexport default SuspenseLoader\n","const NotFound = () => {\n  return (\n    <div style={{ backgroundColor: 'black', height: '100vh', width: '100%' }}>\n      <figure>\n        <div class='sad-mac'></div>\n        <figcaption>\n          <span class='sr-text'>Error 404: Not Found</span>\n          <span class='e'></span>\n          <span class='r'></span>\n          <span class='r'></span>\n          <span class='o'></span>\n          <span class='r'></span>\n          <span class='_4'></span>\n          <span class='_0'></span>\n          <span class='_4'></span>\n          <span class='n'></span>\n          <span class='o'></span>\n          <span class='t'></span>\n          <span class='f'></span>\n          <span class='o'></span>\n          <span class='u'></span>\n          <span class='n'></span>\n          <span class='d'></span>\n        </figcaption>\n      </figure>\n    </div>\n  )\n}\nexport default NotFound\n","const NotFound = () => {\n  return (\n    <div style={{ backgroundColor: 'black', height: '100vh', width: '100%' }}>\n      <figure>\n        <div class='sad-mac'></div>\n        <figcaption>\n          <span class='sr-text'>Invalid Payment</span>\n        </figcaption>\n      </figure>\n    </div>\n  )\n}\nexport default NotFound\n","import React from 'react'\n\nimport './App.css'\nimport { useEffect, useState } from 'react'\nimport { info, hashing, parseAmount } from './core/Azul'\nimport SuspenseLoader from './core/Loader'\nimport NotFound from './core/NotFound'\nimport InvalidPayment from './core/InvalidPayment'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from 'react-router-dom'\nimport queryString from 'query-string';\n\nconst configs = {\n  apiUrl: 'https://api.nateevos.com/',\n  storageUrl: 'https://api.nateevos.com/commons/storage',\n  baseUrl: 'https://payments.nateevos.com/'\n}\n// const configs = {\n//   apiUrl: 'http://localhost:3002/',\n//   storageUrl: 'http://localhost:3002/commons/storage',\n//   baseUrl: 'http://localhost:3001/'\n// }\n\nconst Application = () => {\n  const { storageId } = useParams()\n\n  const url = `${configs.storageUrl}/${storageId}`\n\n  const [data, setData] = useState(info)\n  const [auth, setAuth] = useState('')\n\n  const [loaded, setLoaded] = useState(false)\n  const [error, setError] = useState(false)\n\n  const setUpData = (orderId, amount) => {\n    setData({\n      ...info,\n      OrderNumber: (orderId),\n      ApprovedUrl: `${configs.baseUrl}successtmp?ApprovedTemp`, // uri where will be saved payment info , then will redirect to the last one\n      CancelUrl:  `${configs.baseUrl}${orderId}?Cancelled`,\n      DeclinedUrl: `${configs.baseUrl}${orderId}?Declined`,\n      // OrderNumber: String(orderId).padStart(6, '0'),\n      Amount: parseAmount(amount)\n    })\n  }\n\n\n  useEffect(() => {\n    setAuth(hashing(data))\n  }, [data])\n\n  const fetchStorage = React.useCallback(() => {\n    fetch(`${url}`, {\n      mode: 'cors'\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          if (result.hasError) {\n            setLoaded(true)\n            setError(true)\n          } else {\n            setLoaded(true)\n            if (!result.message.value?.amount) {\n              setError(true)\n            } else {\n              setUpData(result.message.id, result.message.value.amount)\n              setTimeout(() => {\n\n                const submitButton = document.getElementById('submit')\n                submitButton.click();\n               }, 1000)\n            }\n          }\n        },\n        error => {\n          setLoaded(true)\n        }\n      )\n  }, [url])\n\n  useEffect(() => {\n    fetchStorage()\n    if (!error && loaded) {\n   setTimeout(() => {\n\n       const submitButton = document.getElementById('submit')\n       submitButton.click();\n      }, 1000)\n    }\n  }, [fetchStorage])\n\n  return (\n    <>\n      {!loaded && <SuspenseLoader></SuspenseLoader>}\n      {error && <InvalidPayment />}\n      {loaded && !error && (\n        <div className='App'>\n          <header className='App-header'>\n            <img\n              src={`https://i.imgur.com/oJcfEcD.png`}\n              className='App-logo'\n              alt='logo'\n            />\n            <p></p>\n            <form\n              action='https://pruebas.azul.com.do/PaymentPage/'\n              method='post'\n            >\n              <input\n                type='hidden'\n                id='MerchantId'\n                name='MerchantId'\n                value={data.MerchantId}\n              />\n              <input\n                type='hidden'\n                id='TrxType'\n                name='TrxType'\n                value=\"HOLD\"\n              />\n\n              <input\n                type='hidden'\n                id='MerchantName'\n                name='MerchantName'\n                value={data.MerchantName}\n              />\n              <input\n                type='hidden'\n                id='MerchantType'\n                name='MerchantType'\n                value={data.MerchantType}\n              />\n              <input\n                type='hidden'\n                id='CurrencyCode'\n                name='CurrencyCode'\n                value={data.CurrencyCode}\n              />\n              <input\n                type='hidden'\n                id='OrderNumber'\n                name='OrderNumber'\n                value={data.OrderNumber}\n              />\n              <input\n                type='hidden'\n                id='Amount'\n                name='Amount'\n                value={data.Amount}\n              />\n              <input\n                type='hidden'\n                id='ApprovedUrl'\n                name='ApprovedUrl'\n                value={data.ApprovedUrl}\n              />\n              <input type='hidden' id='DesignV2' name='DesignV2' value={1} />\n\n              <input\n                type='hidden'\n                id='LogoImageUrl'\n                name='LogoImageUrl'\n                value={`https://i.imgur.com/oJcfEcD.png`}\n              />\n\n              <input\n                type='hidden'\n                id='ProductImageUrl'\n                name='ProductImageUrl'\n                value={`https://i.imgur.com/oJcfEcD.png`}\n              />\n\n              <input\n                type='hidden'\n                id='DeclinedUrl'\n                name='DeclinedUrl'\n                value={data.DeclinedUrl}\n              />\n              <input\n                type='hidden'\n                id='CancelUrl'\n                name='CancelUrl'\n                value={data.CancelUrl}\n              />\n              <input\n                type='hidden'\n                id='UseCustomField1'\n                name='UseCustomField1'\n                value={data.UseCustomField1}\n              />\n              {/* <input type=\"hidden\" id=\"CustomField1Label\" name=\"CustomField1Label\" value=\"Custom1\"/>\n<input type=\"hidden\" id=\"CustomField1Value\" name=\"CustomField1Value\" value=\"Value1\"/> */}\n              <input\n                type='hidden'\n                id='UseCustomField2'\n                name='UseCustomField2'\n                value={data.UseCustomField2}\n              />\n              {/* <input type=\"hidden\" id=\"CustomField2Label\" name=\"CustomField2Label\" value=\"Custom2\"/>\n<input type=\"hidden\" id=\"CustomField2Value\" name=\"CustomField2Value\" value=\"Value2\"/> */}\n              <input type='hidden' id='AuthHash' name='AuthHash' value={auth} />\n              <input type='submit' id='submit' value='Enviar' style={{visibility: 'hidden'}} />\n            </form>\n          </header>\n        </div>\n      )}\n    </>\n  )\n}\nconst DefaultCmp = () => {\n  return (\n    <div>\n      <NotFound></NotFound>\n    </div>\n  )\n}\nconst SuccessTmp = () => {\n  let params = queryString.parse(window.location.search)\n\n  const savePayment = (data) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify(data);\n    // var raw = JSON.stringify({\"vendorId\":3,\"userId\":\"13\",\"paymentMethod\":\"azul\",\"typeOfReservation\":\"stays\",\"amount\":20,\"reservationId\":16,\"storageId\":41,\"paymentMethodResponse\":{\"ApprovedUrl\":\"\",\"OrderNumber\":\"370\",\"Amount\":\"1000\",\"Itbis\":\"000\",\"AuthorizationCode\":\"032449\",\"DateTime\":\"20210525124414\",\"ResponseCode\":\"ISO8583\",\"IsoCode\":\"00\",\"ResponseMessage\":\"APROBADA\",\"ErrorDescription\":\"\",\"RRN\":\"20210525124436127178\",\"AuthHash\":\"de30f5800e02197379b96802207e19d346492363f5aead581f946838ed50635a2c1239a84407f7726f99adc747be3d0ca23b6316e40f21d54ef1df605b01f3be\",\"CustomOrderId\":\"\",\"CardNumber\":\"541599******5152\",\"DataVaultToken\":\"\",\"DataVaultExpiration\":\"\",\"DataVaultBrand\":\"\",\"AzulOrderId\":\"16697233\"}});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(`${configs.apiUrl}payments`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        console.log(result)\n        window.location.href = `${configs.baseUrl}successcompleted`\n      })\n      .catch(error => console.log('error', error));\n  }\n\n\n  React.useEffect(() => {\n    console.log(params)\n\n    if (params.ResponseMessage == \"APROBADA\") {\n      console.log('do req')\n\n      const uri = `${configs.storageUrl}/${params.OrderNumber}`\n\n      fetch(`${uri}`, {\n        mode: 'cors'\n      })\n        .then(res => res.json())\n        .then(\n          result => {\n           console.log('r', )\n            const stored = result.message.value\n         const  data = {\n            vendorId: stored.data.vendorId,\n            userId: stored.data.userId,\n            paymentMethod: \"azul\",\n            typeOfReservation: stored.type,\n            amount: stored.amount,\n            reservationId:  stored.data.id,\n            storageId: params.OrderNumber,\n            paymentMethodResponse: params\n        }\nconsole.log('dd', data)\n          savePayment(data)\n          },\n          error => {\n            // setLoaded(true)\n          }\n        )\n    }\n\n\n\n\n\n  }, [params])\n  return (\n    \n    <div>\n  <SuspenseLoader></SuspenseLoader>\n    </div>\n  )\n}\n\nconst Success = () => {\n  return (\n    <div>\n      Success\n    </div>\n  )\n}\n\nfunction App () {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/successtmp' component={SuccessTmp} />\n        <Route exact path='/successcompleted' component={Success} />\n        <Route exact path='/:storageId' component={Application} />\n        <Route exact path='*' component={DefaultCmp} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}